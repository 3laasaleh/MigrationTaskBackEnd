// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Migration_Task.Data;

#nullable disable

namespace MigrationTask.Data.Migrations
{
    [DbContext(typeof(MigrationTaskContext))]
    [Migration("20250530152913_initDB")]
    partial class initDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Migration_Task.Data.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Electronics",
                            Description = "Devices and gadgets"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Devices",
                            Description = "Devices and gadgets"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "clothes",
                            Description = "clothes for men and women"
                        });
                });

            modelBuilder.Entity("Migration_Task.Data.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Price = 1000.00m,
                            ProductDescription = "Devices and gadgets",
                            ProductName = "Electronics",
                            Status = true,
                            StockQuantity = 50
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            Price = 1000.00m,
                            ProductDescription = "Devices and Devices",
                            ProductName = "Devices Devices ",
                            Status = true,
                            StockQuantity = 50
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            Price = 1000.00m,
                            ProductDescription = "Electronics",
                            ProductName = "Electronics Electronics ",
                            Status = false,
                            StockQuantity = 50
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            Price = 1000.00m,
                            ProductDescription = "Electronics",
                            ProductName = "Electronics Electronics ",
                            Status = false,
                            StockQuantity = 50
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1,
                            Price = 1000.00m,
                            ProductDescription = "Electronics",
                            ProductName = "Electronics Electronics ",
                            Status = false,
                            StockQuantity = 50
                        });
                });

            modelBuilder.Entity("Migration_Task.Data.Entities.Product", b =>
                {
                    b.HasOne("Migration_Task.Data.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Migration_Task.Data.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
